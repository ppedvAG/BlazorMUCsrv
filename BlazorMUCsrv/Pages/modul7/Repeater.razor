@typeparam ModelType
@HeaderTemplate

@if (Items?.Any() ?? false)
{
    @foreach (var item in Items)
    {
        @ItemTemplate(item)
    }
}
else
{
    @EmptyDataTemplate
}


@FooterTemplate

@code {
    [Parameter]
    public RenderFragment<ModelType> ItemTemplate { get; set; }
    [Parameter]
    public RenderFragment HeaderTemplate { get; set; }
    [Parameter]
    public RenderFragment FooterTemplate { get; set; }
    [Parameter]
    public RenderFragment EmptyDataTemplate { get; set; }

    [Parameter]
    public IEnumerable<ModelType> Items { get; set; }
    [Parameter]
    public Func<IEnumerable<ModelType>> SelectMethod { get; set; }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Items = SelectMethod.Invoke();
            StateHasChanged();
        }
    }
}
